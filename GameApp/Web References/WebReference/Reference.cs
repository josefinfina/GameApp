//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace GameQuiz.WebReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebServiceSoap", Namespace="ForeignKeys")]
    public partial class WebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback FindHighscoreListOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindEmployeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindEmployeeRelativeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindAllKeysOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindSickestEmployeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindSickEmployeesYearOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindAllIndexesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindAllTableConstraintsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindAllTablesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindAllTablesTwoOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindAllColumnsEmployeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindAllColumnsEmployeeTwoOperationCompleted;
        
        private System.Threading.SendOrPostCallback txtFileOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebService() {
            this.Url = global::GameQuiz.Properties.Settings.Default.GameQuiz_WebReference_WebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event FindHighscoreListCompletedEventHandler FindHighscoreListCompleted;
        
        /// <remarks/>
        public event FindEmployeeCompletedEventHandler FindEmployeeCompleted;
        
        /// <remarks/>
        public event FindEmployeeRelativeCompletedEventHandler FindEmployeeRelativeCompleted;
        
        /// <remarks/>
        public event FindAllKeysCompletedEventHandler FindAllKeysCompleted;
        
        /// <remarks/>
        public event FindSickestEmployeeCompletedEventHandler FindSickestEmployeeCompleted;
        
        /// <remarks/>
        public event FindSickEmployeesYearCompletedEventHandler FindSickEmployeesYearCompleted;
        
        /// <remarks/>
        public event FindAllIndexesCompletedEventHandler FindAllIndexesCompleted;
        
        /// <remarks/>
        public event FindAllTableConstraintsCompletedEventHandler FindAllTableConstraintsCompleted;
        
        /// <remarks/>
        public event FindAllTablesCompletedEventHandler FindAllTablesCompleted;
        
        /// <remarks/>
        public event FindAllTablesTwoCompletedEventHandler FindAllTablesTwoCompleted;
        
        /// <remarks/>
        public event FindAllColumnsEmployeeCompletedEventHandler FindAllColumnsEmployeeCompleted;
        
        /// <remarks/>
        public event FindAllColumnsEmployeeTwoCompletedEventHandler FindAllColumnsEmployeeTwoCompleted;
        
        /// <remarks/>
        public event txtFileCompletedEventHandler txtFileCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ForeignKeys/FindHighscoreList", RequestNamespace="ForeignKeys", ResponseNamespace="ForeignKeys", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable FindHighscoreList() {
            object[] results = this.Invoke("FindHighscoreList", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void FindHighscoreListAsync() {
            this.FindHighscoreListAsync(null);
        }
        
        /// <remarks/>
        public void FindHighscoreListAsync(object userState) {
            if ((this.FindHighscoreListOperationCompleted == null)) {
                this.FindHighscoreListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindHighscoreListOperationCompleted);
            }
            this.InvokeAsync("FindHighscoreList", new object[0], this.FindHighscoreListOperationCompleted, userState);
        }
        
        private void OnFindHighscoreListOperationCompleted(object arg) {
            if ((this.FindHighscoreListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindHighscoreListCompleted(this, new FindHighscoreListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ForeignKeys/FindEmployee", RequestNamespace="ForeignKeys", ResponseNamespace="ForeignKeys", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable FindEmployee() {
            object[] results = this.Invoke("FindEmployee", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void FindEmployeeAsync() {
            this.FindEmployeeAsync(null);
        }
        
        /// <remarks/>
        public void FindEmployeeAsync(object userState) {
            if ((this.FindEmployeeOperationCompleted == null)) {
                this.FindEmployeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindEmployeeOperationCompleted);
            }
            this.InvokeAsync("FindEmployee", new object[0], this.FindEmployeeOperationCompleted, userState);
        }
        
        private void OnFindEmployeeOperationCompleted(object arg) {
            if ((this.FindEmployeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindEmployeeCompleted(this, new FindEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ForeignKeys/FindEmployeeRelative", RequestNamespace="ForeignKeys", ResponseNamespace="ForeignKeys", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable FindEmployeeRelative() {
            object[] results = this.Invoke("FindEmployeeRelative", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void FindEmployeeRelativeAsync() {
            this.FindEmployeeRelativeAsync(null);
        }
        
        /// <remarks/>
        public void FindEmployeeRelativeAsync(object userState) {
            if ((this.FindEmployeeRelativeOperationCompleted == null)) {
                this.FindEmployeeRelativeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindEmployeeRelativeOperationCompleted);
            }
            this.InvokeAsync("FindEmployeeRelative", new object[0], this.FindEmployeeRelativeOperationCompleted, userState);
        }
        
        private void OnFindEmployeeRelativeOperationCompleted(object arg) {
            if ((this.FindEmployeeRelativeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindEmployeeRelativeCompleted(this, new FindEmployeeRelativeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ForeignKeys/FindAllKeys", RequestNamespace="ForeignKeys", ResponseNamespace="ForeignKeys", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable FindAllKeys() {
            object[] results = this.Invoke("FindAllKeys", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void FindAllKeysAsync() {
            this.FindAllKeysAsync(null);
        }
        
        /// <remarks/>
        public void FindAllKeysAsync(object userState) {
            if ((this.FindAllKeysOperationCompleted == null)) {
                this.FindAllKeysOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindAllKeysOperationCompleted);
            }
            this.InvokeAsync("FindAllKeys", new object[0], this.FindAllKeysOperationCompleted, userState);
        }
        
        private void OnFindAllKeysOperationCompleted(object arg) {
            if ((this.FindAllKeysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindAllKeysCompleted(this, new FindAllKeysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ForeignKeys/FindSickestEmployee", RequestNamespace="ForeignKeys", ResponseNamespace="ForeignKeys", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable FindSickestEmployee() {
            object[] results = this.Invoke("FindSickestEmployee", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void FindSickestEmployeeAsync() {
            this.FindSickestEmployeeAsync(null);
        }
        
        /// <remarks/>
        public void FindSickestEmployeeAsync(object userState) {
            if ((this.FindSickestEmployeeOperationCompleted == null)) {
                this.FindSickestEmployeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindSickestEmployeeOperationCompleted);
            }
            this.InvokeAsync("FindSickestEmployee", new object[0], this.FindSickestEmployeeOperationCompleted, userState);
        }
        
        private void OnFindSickestEmployeeOperationCompleted(object arg) {
            if ((this.FindSickestEmployeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindSickestEmployeeCompleted(this, new FindSickestEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ForeignKeys/FindSickEmployeesYear", RequestNamespace="ForeignKeys", ResponseNamespace="ForeignKeys", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable FindSickEmployeesYear() {
            object[] results = this.Invoke("FindSickEmployeesYear", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void FindSickEmployeesYearAsync() {
            this.FindSickEmployeesYearAsync(null);
        }
        
        /// <remarks/>
        public void FindSickEmployeesYearAsync(object userState) {
            if ((this.FindSickEmployeesYearOperationCompleted == null)) {
                this.FindSickEmployeesYearOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindSickEmployeesYearOperationCompleted);
            }
            this.InvokeAsync("FindSickEmployeesYear", new object[0], this.FindSickEmployeesYearOperationCompleted, userState);
        }
        
        private void OnFindSickEmployeesYearOperationCompleted(object arg) {
            if ((this.FindSickEmployeesYearCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindSickEmployeesYearCompleted(this, new FindSickEmployeesYearCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ForeignKeys/FindAllIndexes", RequestNamespace="ForeignKeys", ResponseNamespace="ForeignKeys", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable FindAllIndexes() {
            object[] results = this.Invoke("FindAllIndexes", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void FindAllIndexesAsync() {
            this.FindAllIndexesAsync(null);
        }
        
        /// <remarks/>
        public void FindAllIndexesAsync(object userState) {
            if ((this.FindAllIndexesOperationCompleted == null)) {
                this.FindAllIndexesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindAllIndexesOperationCompleted);
            }
            this.InvokeAsync("FindAllIndexes", new object[0], this.FindAllIndexesOperationCompleted, userState);
        }
        
        private void OnFindAllIndexesOperationCompleted(object arg) {
            if ((this.FindAllIndexesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindAllIndexesCompleted(this, new FindAllIndexesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ForeignKeys/FindAllTableConstraints", RequestNamespace="ForeignKeys", ResponseNamespace="ForeignKeys", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable FindAllTableConstraints() {
            object[] results = this.Invoke("FindAllTableConstraints", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void FindAllTableConstraintsAsync() {
            this.FindAllTableConstraintsAsync(null);
        }
        
        /// <remarks/>
        public void FindAllTableConstraintsAsync(object userState) {
            if ((this.FindAllTableConstraintsOperationCompleted == null)) {
                this.FindAllTableConstraintsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindAllTableConstraintsOperationCompleted);
            }
            this.InvokeAsync("FindAllTableConstraints", new object[0], this.FindAllTableConstraintsOperationCompleted, userState);
        }
        
        private void OnFindAllTableConstraintsOperationCompleted(object arg) {
            if ((this.FindAllTableConstraintsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindAllTableConstraintsCompleted(this, new FindAllTableConstraintsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ForeignKeys/FindAllTables", RequestNamespace="ForeignKeys", ResponseNamespace="ForeignKeys", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable FindAllTables() {
            object[] results = this.Invoke("FindAllTables", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void FindAllTablesAsync() {
            this.FindAllTablesAsync(null);
        }
        
        /// <remarks/>
        public void FindAllTablesAsync(object userState) {
            if ((this.FindAllTablesOperationCompleted == null)) {
                this.FindAllTablesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindAllTablesOperationCompleted);
            }
            this.InvokeAsync("FindAllTables", new object[0], this.FindAllTablesOperationCompleted, userState);
        }
        
        private void OnFindAllTablesOperationCompleted(object arg) {
            if ((this.FindAllTablesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindAllTablesCompleted(this, new FindAllTablesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ForeignKeys/FindAllTablesTwo", RequestNamespace="ForeignKeys", ResponseNamespace="ForeignKeys", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable FindAllTablesTwo() {
            object[] results = this.Invoke("FindAllTablesTwo", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void FindAllTablesTwoAsync() {
            this.FindAllTablesTwoAsync(null);
        }
        
        /// <remarks/>
        public void FindAllTablesTwoAsync(object userState) {
            if ((this.FindAllTablesTwoOperationCompleted == null)) {
                this.FindAllTablesTwoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindAllTablesTwoOperationCompleted);
            }
            this.InvokeAsync("FindAllTablesTwo", new object[0], this.FindAllTablesTwoOperationCompleted, userState);
        }
        
        private void OnFindAllTablesTwoOperationCompleted(object arg) {
            if ((this.FindAllTablesTwoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindAllTablesTwoCompleted(this, new FindAllTablesTwoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ForeignKeys/FindAllColumnsEmployee", RequestNamespace="ForeignKeys", ResponseNamespace="ForeignKeys", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable FindAllColumnsEmployee() {
            object[] results = this.Invoke("FindAllColumnsEmployee", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void FindAllColumnsEmployeeAsync() {
            this.FindAllColumnsEmployeeAsync(null);
        }
        
        /// <remarks/>
        public void FindAllColumnsEmployeeAsync(object userState) {
            if ((this.FindAllColumnsEmployeeOperationCompleted == null)) {
                this.FindAllColumnsEmployeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindAllColumnsEmployeeOperationCompleted);
            }
            this.InvokeAsync("FindAllColumnsEmployee", new object[0], this.FindAllColumnsEmployeeOperationCompleted, userState);
        }
        
        private void OnFindAllColumnsEmployeeOperationCompleted(object arg) {
            if ((this.FindAllColumnsEmployeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindAllColumnsEmployeeCompleted(this, new FindAllColumnsEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ForeignKeys/FindAllColumnsEmployeeTwo", RequestNamespace="ForeignKeys", ResponseNamespace="ForeignKeys", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable FindAllColumnsEmployeeTwo() {
            object[] results = this.Invoke("FindAllColumnsEmployeeTwo", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void FindAllColumnsEmployeeTwoAsync() {
            this.FindAllColumnsEmployeeTwoAsync(null);
        }
        
        /// <remarks/>
        public void FindAllColumnsEmployeeTwoAsync(object userState) {
            if ((this.FindAllColumnsEmployeeTwoOperationCompleted == null)) {
                this.FindAllColumnsEmployeeTwoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindAllColumnsEmployeeTwoOperationCompleted);
            }
            this.InvokeAsync("FindAllColumnsEmployeeTwo", new object[0], this.FindAllColumnsEmployeeTwoOperationCompleted, userState);
        }
        
        private void OnFindAllColumnsEmployeeTwoOperationCompleted(object arg) {
            if ((this.FindAllColumnsEmployeeTwoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindAllColumnsEmployeeTwoCompleted(this, new FindAllColumnsEmployeeTwoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ForeignKeys/txtFile", RequestNamespace="ForeignKeys", ResponseNamespace="ForeignKeys", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string txtFile(string filename) {
            object[] results = this.Invoke("txtFile", new object[] {
                        filename});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void txtFileAsync(string filename) {
            this.txtFileAsync(filename, null);
        }
        
        /// <remarks/>
        public void txtFileAsync(string filename, object userState) {
            if ((this.txtFileOperationCompleted == null)) {
                this.txtFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OntxtFileOperationCompleted);
            }
            this.InvokeAsync("txtFile", new object[] {
                        filename}, this.txtFileOperationCompleted, userState);
        }
        
        private void OntxtFileOperationCompleted(object arg) {
            if ((this.txtFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.txtFileCompleted(this, new txtFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FindHighscoreListCompletedEventHandler(object sender, FindHighscoreListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindHighscoreListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindHighscoreListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FindEmployeeCompletedEventHandler(object sender, FindEmployeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FindEmployeeRelativeCompletedEventHandler(object sender, FindEmployeeRelativeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindEmployeeRelativeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindEmployeeRelativeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FindAllKeysCompletedEventHandler(object sender, FindAllKeysCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindAllKeysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindAllKeysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FindSickestEmployeeCompletedEventHandler(object sender, FindSickestEmployeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindSickestEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindSickestEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FindSickEmployeesYearCompletedEventHandler(object sender, FindSickEmployeesYearCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindSickEmployeesYearCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindSickEmployeesYearCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FindAllIndexesCompletedEventHandler(object sender, FindAllIndexesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindAllIndexesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindAllIndexesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FindAllTableConstraintsCompletedEventHandler(object sender, FindAllTableConstraintsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindAllTableConstraintsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindAllTableConstraintsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FindAllTablesCompletedEventHandler(object sender, FindAllTablesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindAllTablesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindAllTablesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FindAllTablesTwoCompletedEventHandler(object sender, FindAllTablesTwoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindAllTablesTwoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindAllTablesTwoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FindAllColumnsEmployeeCompletedEventHandler(object sender, FindAllColumnsEmployeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindAllColumnsEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindAllColumnsEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FindAllColumnsEmployeeTwoCompletedEventHandler(object sender, FindAllColumnsEmployeeTwoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindAllColumnsEmployeeTwoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindAllColumnsEmployeeTwoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void txtFileCompletedEventHandler(object sender, txtFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class txtFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal txtFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591